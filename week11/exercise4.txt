Elle and Gabe 

let id x = x ;;

id --> t0 
x --> t1 
return -- > t0 ~ t1 

let int_id1 (x : int) = x

int_id1 --> t0 
x --> int
return -> t0 ~ int 

let int_id2 x : int = x ;;
int_id2 --> int 
x --> t0 
return --> int 

let flip f x y = f y x ;;

let flip_specific f (x : int) y = f y x ;;

let rec fact n = if n = 0 then 1 else fact (n - 1) ;;

let value = (fun f => (f 4, f "string")) (fun x => x) ;;

type my_type =
  | A
  | B of int
  | C of bool * string ;;

let int_of_my_type v = match v with
  | A => 0
  | B i => i
  | C (b, s) => if b then int_of_string s else ~ (int_of_string s) ;;

let mystery a b = match a with
  | A => b ()
  | B i => string_of_int i
  | C (v, s) => s ^ (b ())